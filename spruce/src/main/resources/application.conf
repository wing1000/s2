 jvm.memory=-server -Xmx1024M -XX:MaxPermSize=512M

# This is the main configuration file for the application.
# ~~~~~
application.name=sprout

# Application mode
# ~~~~~
# Set to dev to enable instant reloading and other development help.
# Otherwise set to prod.
application.mode=dev
%prod.application.mode=prod


# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions
# If you deploy your application to several instances be sure to use the same key !
application.secret=FYZ7hEdlCSdMXFVs08riiMqKgV8rWHEIhpvyGLA7VTQEPBYdzx2l0bALnMdKeyGS

# Additional modules
# ~~~~~
# A module is another play! application. Add a line for each module you want
# to add to your application. Modules path are either absolutes or relative to
# the application root.
# They get loaded from top to bottom; Syntax: module.{name}={path}
#
# Keep the next line as is to help the play script to manage modules.
# ---- MODULES ----
#module.maven=${play.path}/modules/maven-head
#module.japid=${play.path}/modules/japid-0.9.37

japid.trace.file=false
japid.trace.file.html=false
japid.trace.file.json=false
japid.dump.request＝true


# i18n
# ~~~~~
# Define locales used by your application.
# You can then place localized messages in conf/messages.{locale} files
# application.langs=fr,en,ja,zh,zh_CN
application.langs=en
# Date format
# ~~~~~
date.format=yyyy-MM-dd
# date.format.fr=dd/MM/yyyy

# Server configuration
# ~~~~~
# If you need to change the HTTP port, uncomment this (default is set to 9000)
http.port=8022
#
# By default the server listen for HTTP on the wilcard address.
# You can restrict this.
#http.address=127.0.0.1
#
# Use this if you don't host your Play application at the root of the domain
# you're serving it from. This parameter has no effect when deployed as a
# war, because the path will be handled by the application server.
# http.path=/

# Session configuration
# ~~~~~~~~~~~~~~~~~~~~~~
# By default, session will be written to the transient PLAY_SESSION cookie.
# The cookies are not secured by default, only set it to true
# if you're serving your pages through https.
# application.session.cookie=PLAY
# application.session.maxAge=1h
# application.session.secure=false

# Session/Cookie sharing between subdomain
# ~~~~~~~~~~~~~~~~~~~~~~
# By default a cookie is only valid for a specific domain. By setting
# application.defaultCookieDomain to '.example.com', the cookies
# will be valid for all domains ending with '.example.com', ie:
# foo.example.com and bar.example.com
# application.defaultCookieDomain=.example.com

# JVM configuration
# ~~~~~
# Define which port is used by JPDA when application is in debug mode (default is set to 8000)
# jpda.port=8000
#
# Java source level => 1.5, 1.6 or 1.7 (experimental)
java.source=1.7

# Log level
# ~~~~~
# Specify log level for your application.
# If you want a very customized log, create a log4j.properties file in the conf directory
# application.log=INFO
#
# More logging configuration
# application.log.path=/log4j.properties
# application.log.system.out=off

# Database configuration
# ~~~~~ 
# Enable a database engine if needed.
#
# To quickly set up a development database, use either:
#   - mem : for a transient in memory database (H2 in memory)
#   - fs  : for a simple file written database (H2 file stored)
# db=mem
#

database.url=jdbc:mysql://localhost:3306/spruce
database.driver=com.mysql.jdbc.Driver
database.user=root
database.password=
database.pool.name=DBCP

#BoneCP.idleConnectionTestPeriod=60
#BoneCP.idleMaxAge=240
#BoneCP.maxConnectionsPerPartition=30
#BoneCP.minConnectionsPerPartition=10
#BoneCP.partitionCount=3
#BoneCP.acquireIncrement=5
#BoneCP.statementsCacheSize=100
#BoneCP.releaseHelperThreads=3

#Pool config
DBCP.lifo = true
#最大活动连接:连接池在同一时间能够分配的最大活动连接的数量, 如果设置为非正数则表示不限制
DBCP.maxActive = 20
#最大空闲连接:连接池中容许保持空闲状态的最大连接数量,超过的空闲连接将被释放,如果设置为负数表示不限制
DBCP.maxIdle = 10
#最小空闲连接:连接池中容许保持空闲状态的最小连接数量,低于这个数量将创建新的连接,如果设置为0则不创建
DBCP.minIdle = 4
#无限	最大等待时间:当没有可用连接时,连接池等待连接被归还的最大时间(以毫秒计数),超过时间则抛出异常,如果设置为-1表示无限等待
DBCP.maxWait = 150000

#0=fail 1=block 2=grow
DBCP.whenExhaustedAction = 1
#指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个.注意: 设置为true后如果要生效
DBCP.testOnBorrow = true
#指明是否在归还到池中前进行检验 注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串
DBCP.testOnReturn = false

#
#指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.注意: 设置为true后如果要生效
DBCP.testWhileIdle = false
#在每次空闲连接回收器线程(如果有)运行时检查的连接数量
DBCP.numTestsPerEvictionRun =  3
#
#连接在池中保持空闲而不被空闲连接回收器线程(如果有)回收的最小时间值，单位毫秒
DBCP.minEvictableIdleTimeMillis = -1
#在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. 如果设置为非正数,则不运行空闲连接回收器线程
DBCP.timeBetweenEvictionRunsMillis = -1
DBCP.softMinEvictableIdleTimeMillis = -1

# To connect to a local MySQL5 database, use:
# db=mysql://user:pwd@host/database
#
# To connect to a local PostgreSQL9 database, use:
# db=postgres://user:pwd@host/database
#
# If you need a full JDBC configuration use the following :
# db.url=jdbc:postgresql:database_name
# db.driver=org.postgresql.Driver
# db.user=root
# db.pass=secret
#
# Connections pool configuration :
# db.pool.timeout=1000
# db.pool.maxSize=30
# db.pool.minSize=10
#
# If you want to reuse an existing Datasource from your application server, use:
# db=java:/comp/env/jdbc/myDatasource
#
# When using an existing Datasource, it's sometimes needed to destroy it when
# the application is stopped. Depending on the datasource, you can define a
# generic "destroy" method :
# db.destroyMethod=close

# JPA Configuration (Hibernate)
# ~~~~~
#
# Specify the custom JPA dialect to use here (default to guess):
# jpa.dialect=org.hibernate.dialect.PostgreSQLDialect
#
# Specify the ddl generation pattern to use. Set to none to disable it 
# (default to update in DEV mode, and none in PROD mode):
# jpa.ddl=update
#
# Debug SQL statements (logged using DEBUG level):
# jpa.debugSQL=true
#
# You can even specify additional hibernate properties here:
# hibernate.use_sql_comments=true
# ...
#
# Store path for Blob content
attachments.path=data/attachments

# Memcached configuration
# ~~~~~ 
# Enable memcached if needed. Otherwise a local cache is used.
# memcached=enabled
#
# Specify memcached host (default to 127.0.0.1:11211)
# memcached.host=127.0.0.1:11211
#
# Or you can specify multiple host to build a distributed cache
# memcached.1.host=127.0.0.1:11211
# memcached.2.host=127.0.0.1:11212
#
# Use plain SASL to authenticate for memcached
# memcached.user=
# memcached.password=

# HTTP Response headers control for static files
# ~~~~~
# Set the default max-age, telling the user's browser how long it should cache the page.
# Default is 3600 (one hour). Set it to 0 to send no-cache.
# This is only read in prod mode, in dev mode the cache is disabled.
# http.cacheControl=3600

# If enabled, Play will generate entity tags automatically and send a 304 when needed.
# Default is true, set it to false to deactivate use of entity tags.
# http.useETag=true

# Custom mime types
# mimetype.xpi=application/x-xpinstall

# WS configuration
# ~~~~~
# Default engine is Async Http Client, uncomment to use
# the JDK's internal implementation
# webservice = urlfetch
# If you need to set proxy params for WS requests
# http.proxyHost = localhost
# http.proxyPort = 3128
# http.proxyUser = jojo
# http.proxyPassword = jojo

# Mail configuration
# ~~~~~ 
# Default is to use a mock Mailer
#mail.smtp=mock

# Or, specify mail host configuration
mail.smtp.host=smtp.163.com
mail.smtp.user=spruce_system
mail.smtp.pass=spqwertyu
#mail.smtp.channel=ssl

# Url-resolving in Jobs
# ~~~~~~
# When rendering templates with reverse-url-resoling (@@{..}) in Jobs (which do not have an inbound Http.Request),
# ie if sending a HtmlMail, Play need to know which url your users use when accessing your app.
# %test.application.baseUrl=http://localhost:9000/
# %prod.application.baseUrl=http://www.yourdomain.com/

# Jobs executor
# ~~~~~~
# Size of the Jobs pool
# play.jobs.pool=10

# Execution pool
# ~~~~~
# Default to 1 thread in DEV mode or (nb processors + 1) threads in PROD mode.
# Try to keep a low as possible. 1 thread will serialize all requests (very useful for debugging purpose)
# play.pool=3

# Open file from errors pages
# ~~~~~
# If your text editor supports opening files by URL, Play! will
# dynamically link error pages to files 
#
# Example, for textmate:
# play.editor=txmt://open?url=file://%s&line=%s

# Testing. Set up a custom configuration for test mode
# ~~~~~
#%test.module.cobertura=${play.path}/modules/cobertura
%test.application.mode=dev
%test.db.url=jdbc:h2:mem:play;MODE=MYSQL;LOCK_MODE=0
%test.jpa.ddl=create
%test.mail.smtp=mock

#slice
#file file/cp:config.xml
#zookeeper zk/zk.properties
SliceConfig=file/cp:config.xml
#redis
# hosts: MasterHost1:port[,Slavehost1-1:port,Slavehost1-2:port...] MasterHost2:port[,Slavehost2-1:port,Slavehost2-2:port...]
redis.hosts=my:6379,my:6379
redis.timeout=3000
redis.ploy.class= fengfei.shard.impl.RandomPloy
#设置后进先出的池策略
redis.pool.lifo=true
#允许最大活动对象数
redis.pool.maxActive=10
#允许最大空闲对象数
redis.pool.maxIdle=10
#允许最大等待时间毫秒数
redis.pool.maxWait=150000
#允许最小空闲对象数
redis.pool.minIdle=1
#
#指明是否在从池中取出对象前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个.
redis.pool.testOnBorrow =false
#指明是否在归还到池中前进行检验
redis.pool.testOnReturn =false
#当池中对象用完时，请求新的对象所要执行的动作
# WHEN_EXHAUSTED_FAIL=0, borrowObject will throw a NoSuchElementException
# WHEN_EXHAUSTED_BLOCK=1, borrowObject will block (invoke wait until a new or idle object is available. If a positive maxWait value is supplied, the borrowObject will block for at most that many milliseconds, after which a NoSuchElementException will be thrown. If maxWait is non-positive, the borrowObject method will block indefinitely.
# WHEN_EXHAUSTED_GROW=2, borrowObject will create a new object and return it (essentially making maxActive meaningless.
redis.pool.whenExhaustedAction=1
#
#指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
redis.pool.testWhileIdle=false
#被空闲对象回收器回收前在池中保持空闲状态的最小时间毫秒数
redis.pool.minEvictableIdleTimeMillis=100000
#设定在进行后台对象清理时，每次检查对象数
redis.pool.numTestsPerEvictionRun=1
#在空闲连接回收器线程运行期间休眠的时间毫秒数. 如果设置为非正数,则不运行空闲连接回收器线程
redis.pool.timeBetweenEvictionRunsMillis=120000

#Fqueue
queue.user.consumer.size=3
queue.photo.consumer.size=4
queue.consumer.max.increment=0.3
queue.consumer.keepAliveTime=60000

fqueue.path.photo=/opt/spruce/queue/photo
fqueue.path.user=/opt/spruce/queue/user
#lucene index path
lucene.index.path.photo=/opt/spruce/index/photo
lucene.index.path.user=/opt/spruce/index/user






