#redis
# hosts: MasterHost1:port[,Slavehost1-1:port,Slavehost1-2:port...] MasterHost2:port[,Slavehost2-1:port,Slavehost2-2:port...]
redis.hosts=s58.to:6379,s58.to:6379
redis.timeout=3000
redis.ploy.class= fengfei.shard.impl.RandomPloy
#\u8BBE\u7F6E\u540E\u8FDB\u5148\u51FA\u7684\u6C60\u7B56\u7565
redis.pool.lifo=true
#\u5141\u8BB8\u6700\u5927\u6D3B\u52A8\u5BF9\u8C61\u6570
redis.pool.maxActive=10
#\u5141\u8BB8\u6700\u5927\u7A7A\u95F2\u5BF9\u8C61\u6570
redis.pool.maxIdle=10
#\u5141\u8BB8\u6700\u5927\u7B49\u5F85\u65F6\u95F4\u6BEB\u79D2\u6570
redis.pool.maxWait=150000
#\u5141\u8BB8\u6700\u5C0F\u7A7A\u95F2\u5BF9\u8C61\u6570
redis.pool.minIdle=1
#
#\u6307\u660E\u662F\u5426\u5728\u4ECE\u6C60\u4E2D\u53D6\u51FA\u5BF9\u8C61\u524D\u8FDB\u884C\u68C0\u9A8C,\u5982\u679C\u68C0\u9A8C\u5931\u8D25,\u5219\u4ECE\u6C60\u4E2D\u53BB\u9664\u8FDE\u63A5\u5E76\u5C1D\u8BD5\u53D6\u51FA\u53E6\u4E00\u4E2A.
redis.pool.testOnBorrow =false
#\u6307\u660E\u662F\u5426\u5728\u5F52\u8FD8\u5230\u6C60\u4E2D\u524D\u8FDB\u884C\u68C0\u9A8C
redis.pool.testOnReturn =false
#\u5F53\u6C60\u4E2D\u5BF9\u8C61\u7528\u5B8C\u65F6\uFF0C\u8BF7\u6C42\u65B0\u7684\u5BF9\u8C61\u6240\u8981\u6267\u884C\u7684\u52A8\u4F5C
# WHEN_EXHAUSTED_FAIL=0, borrowObject will throw a NoSuchElementException
# WHEN_EXHAUSTED_BLOCK=1, borrowObject will block (invoke wait until a new or idle object is available. If a positive maxWait value is supplied, the borrowObject will block for at most that many milliseconds, after which a NoSuchElementException will be thrown. If maxWait is non-positive, the borrowObject method will block indefinitely.
# WHEN_EXHAUSTED_GROW=2, borrowObject will create a new object and return it (essentially making maxActive meaningless.
redis.pool.whenExhaustedAction=1
#
#\u6307\u660E\u8FDE\u63A5\u662F\u5426\u88AB\u7A7A\u95F2\u8FDE\u63A5\u56DE\u6536\u5668(\u5982\u679C\u6709)\u8FDB\u884C\u68C0\u9A8C.\u5982\u679C\u68C0\u6D4B\u5931\u8D25,\u5219\u8FDE\u63A5\u5C06\u88AB\u4ECE\u6C60\u4E2D\u53BB\u9664.
redis.pool.testWhileIdle=false
#\u88AB\u7A7A\u95F2\u5BF9\u8C61\u56DE\u6536\u5668\u56DE\u6536\u524D\u5728\u6C60\u4E2D\u4FDD\u6301\u7A7A\u95F2\u72B6\u6001\u7684\u6700\u5C0F\u65F6\u95F4\u6BEB\u79D2\u6570
redis.pool.minEvictableIdleTimeMillis=100000
#\u8BBE\u5B9A\u5728\u8FDB\u884C\u540E\u53F0\u5BF9\u8C61\u6E05\u7406\u65F6\uFF0C\u6BCF\u6B21\u68C0\u67E5\u5BF9\u8C61\u6570
redis.pool.numTestsPerEvictionRun=1
#\u5728\u7A7A\u95F2\u8FDE\u63A5\u56DE\u6536\u5668\u7EBF\u7A0B\u8FD0\u884C\u671F\u95F4\u4F11\u7720\u7684\u65F6\u95F4\u6BEB\u79D2\u6570. \u5982\u679C\u8BBE\u7F6E\u4E3A\u975E\u6B63\u6570,\u5219\u4E0D\u8FD0\u884C\u7A7A\u95F2\u8FDE\u63A5\u56DE\u6536\u5668\u7EBF\u7A0B
redis.pool.timeBetweenEvictionRunsMillis=120000